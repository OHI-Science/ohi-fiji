source('../ohiprep/src/R/common.R')
# new paths based on host machine
dirs = list(
neptune_data  = dir_neptune_data,
neptune_local = dir_neptune_local,
ohiprep       = '../ohiprep',
ohicore       = '../ohicore')
scenario <- 'fiji2013'
# load ohicore (must first download using directions from here: )
library(ohicore) # or
#devtools::load_all(dirs$ohicore)
library(stringr)
conf   = Conf(sprintf('%s/conf', scenario))
CheckLayers(layers.csv = sprintf('%s/layers.csv', scenario),
layers.dir = sprintf('%s/layers', scenario),
flds_id    = conf$config$layers_id_fields)
source('../ohiprep/src/R/common.R')
library(tidyr)
OHI2013 <- read.csv("fiji2013/scores_2013EEZ.csv") %>%
filter(region_id==18) %>%
spread(dimension, score) %>%
select(goal, score, status, future, trend, pressures, resilience) %>%
mutate(goal = factor(goal, levels=c('Index', 'NP', 'AO', 'FP', 'MAR', 'FIS', 'BD', 'SPP', 'HAB',
'CW', 'SP', 'LSP', 'ICO', 'LE', 'ECO', 'LIV', 'TR', 'CP', 'CS'))) %>%
arrange(goal)
write.csv(OHI2013, "figures and tables/OHI2013.csv", na="", row.names=FALSE)
old_bmsy <- read.csv("fiji2013/layers/fis_b_bmsy_ohi.csv")
load("../ohiprep/Global/FIS_Bbmsy/Hex outputs/cmsy_ohi_results_table_originalPrio_no0s.RData")
b_bmsy_c_na <- cmsy.ohi.orig.no0.df %>%
mutate(fao_id = as.numeric(sapply(strsplit(as.character(stock_id), "_"), function(x)x[2]))) %>%
mutate(taxon_name = sapply(strsplit(as.character(stock_id), "_"), function(x)x[1])) %>%
select(fao_id, taxon_name, year=yr, b_bmsy)
write.csv(b_bmsy_c_na, "fiji2013/layers/fis_b_bmsy.csv", na="", row.names=FALSE)
location <- file.path(dir_neptune_data, 'model/FJ_v2013/Scripts and Data/data/AOTaxa.csv')
file.copy(location, 'fiji2013/layers/ao_taxa.csv', overwrite=TRUE)
lyrs <- read.csv('fiji2013/layers_2013EEZ.csv')
lyrs <- lyrs %>%
filter(targets != "AO") %>%
select(targets, layer, layer_old, name, description, fld_value, units, filename)
ao_taxa <- data.frame(
targets = "AO",
layer = "ao_taxa",
layer_old = "ao_taxa",
name = "list of artisanally fished species",
description = "list created by Kristin to ID artisanally fished taxa",
fld_value = "species",
units = 'species name',
filename = 'ao_taxa.csv')
lyrs <- rbind(lyrs, ao_taxa)
write.csv(lyrs, 'fiji2013/layers.csv', na='', row.names=F)
old_trend <- read.csv("fiji2013/layers/hab_trend.csv")
old_trend %>%
filter(rgn_id==18,
habitat=="coral")
old_trend$trend[old_trend$rgn_id==18 & old_trend$habitat=="coral"] <- 0.007253
write.csv(old_trend, "fiji2013/layers/hab_trend.csv", na="", row.names=FALSE)
harvest_tonnes <- read.csv("fiji2013/layers/mar_harvest_tonnes_ohi.csv")
harvest_tonnes_fiji <- harvest_tonnes %>%
filter(rgn_id == 18)
species <- unique(harvest_tonnes_fiji$species_code)
harvest_tonnes[harvest_tonnes$species_code %in% species, ] #species codes are specific to Fiji
# cut shrimp/prawn data for Fiji to replace with new data
harvest_tonnes  <-  harvest_tonnes %>%
filter(!(species_code %in% c(803, 804)))
# get Yashika data and bind
Yashika_harvest <- read.csv(file.path(dir_neptune_data, 'model/FJ_v2013/Scripts and Data/data/MAR_harvest_tonnes.csv'))
harvest_tonnes <- rbind(harvest_tonnes, Yashika_harvest)
write.csv(harvest_tonnes, "fiji2013/layers/mar_harvest_tonnes.csv", row.names=FALSE)
harvest_species <- read.csv("fiji2013/layers/mar_harvest_species_ohi.csv", stringsAsFactors=FALSE)
harvest_species[harvest_species$species_code %in% species, ]
harvest_species$species[harvest_species$species_code == 803]  <- "Shrimp"
harvest_species$species[harvest_species$species_code == 804]  <- "Prawn"
write.csv(harvest_species, "fiji2013/layers/mar_harvest_species.csv", row.names=FALSE)
sust_species <- read.csv("fiji2013/layers/mar_sustainability_score_ohi.csv", stringsAsFactors=FALSE)
sust_species %>%
filter(rgn_id==18)
sust_species$species[sust_species$rgn_id==18 & sust_species$species=="Blue shrimp"] <- "Shrimp"
sust_species$species[sust_species$rgn_id==18 & sust_species$species=="Giant tiger prawn"] <- "Prawn"
sust_species$sust_coeff[sust_species$rgn_id==18 & sust_species$species=="Shrimp"] <- 0.320588
sust_species$sust_coeff[sust_species$rgn_id==18 & sust_species$species=="Prawn"] <- 0.354365
write.csv(sust_species, "fiji2013/layers/mar_sustainability_score.csv", row.names=FALSE)
status <- read.csv("fiji2013/layers/ico_spp_extinction_status_ohi.csv")
status <- status %>%
filter(rgn_id != 18)
new_data <- read.csv(file.path(dir_neptune_data, 'model/FJ_v2013/Scripts and Data/data/Fiji_Iconics.csv'), na.strings="")
status_new <- new_data %>%
mutate(rgn_id = 18) %>%
select(rgn_id, sciname=Scientific, category=IUCN.Category) %>%
filter(!is.na(category))
status <- rbind(status, status_new)
write.csv(status, "fiji2013/layers/ico_spp_extinction_status.csv", row.names=FALSE)
trend <- read.csv("fiji2013/layers/ico_spp_popn_trend_ohi.csv")
trend <- trend %>%
filter(rgn_id != 18)
trend_new <- new_data %>%
mutate(rgn_id = 18) %>%
select(rgn_id, sciname=Scientific, popn_trend=Trend) %>%
filter(!is.na(popn_trend))
trend <- rbind(trend, trend_new)
write.csv(trend, "fiji2013/layers/ico_spp_popn_trend.csv", row.names=FALSE)
LSP_data <- read.csv(file.path(dir_neptune_data, 'model/FJ_v2013/Scripts and Data/data/LSPFiji.csv'), na.strings="")
cmpa <- LSP_data[LSP_data$type %in% c("cmpa_Qoliqoli", "cmpa_Tabu"), ]
weightSummary <- data.frame(management=c("NoTabu",  "WithTabu", "Tabu_permanent", "Tabu_controlled_harvest", "Tabu_uncontrolled_haverst", "Tabu_other_management"),
weight = c(0, 0.15, 1, 0.5, 0.1, 0.1))
cmpa <- merge(cmpa, weightSummary, by="management", all.x=TRUE)
cmpa$WeightedArea <- cmpa$Area_km2 * cmpa$weight
sum(cmpa$Area_km2)  # This is the total area that replaces the 3 nm in the OHI analysis, 30050.5 km2
cmpa_effective_area <- cmpa %>%
group_by(year) %>%
summarize(area_km2=sum(WeightedArea)) %>%
mutate(rgn_id=18) %>%
select(rgn_id, year, area_km2)
# replace Fiji data in OHI 2013 data:
cmpa_ohi <- read.csv("fiji2013/layers/lsp_prot_area_offshore3nm_ohi.csv")
cmpa_ohi  <- cmpa_ohi %>%
filter(rgn_id!=18)
cmpa <- rbind(cmpa_ohi, cmpa_effective_area)
write.csv(cmpa, "fiji2013/layers/lsp_prot_area_offshore3nm.csv", row.names=FALSE)
source('../ohiprep/src/R/common.R')
dirs = list(
neptune_data  = dir_neptune_data,
neptune_local = dir_neptune_local,
ohiprep       = '../ohiprep',
ohicore       = '../ohicore')
scenario <- 'fiji2013'
library(ohicore) # or
library(stringr)
conf   = Conf(sprintf('%s/conf', scenario))
CheckLayers(layers.csv = sprintf('%s/layers.csv', scenario),
layers.dir = sprintf('%s/layers', scenario),
flds_id    = conf$config$layers_id_fields)
conf   = Conf(sprintf('%s/conf', scenario))
layers = Layers(sprintf('%s/layers.csv', scenario), sprintf('%s/layers', scenario))
scores = CalculateAll(conf, layers, debug=T)
scores = CalculateAll(conf, layers, debug=T)
source('../ohiprep/src/R/common.R')
# new paths based on host machine
dirs = list(
neptune_data  = dir_neptune_data,
neptune_local = dir_neptune_local,
ohiprep       = '../ohiprep',
ohicore       = '../ohicore')
scenario <- 'fiji2013'
# load ohicore (must first download using directions from here: )
library(ohicore) # or
#devtools::load_all(dirs$ohicore)
library(stringr)
conf   = Conf(sprintf('%s/conf', scenario))
# run checks on layers
CheckLayers(layers.csv = sprintf('%s/layers.csv', scenario),
layers.dir = sprintf('%s/layers', scenario),
flds_id    = conf$config$layers_id_fields)
conf   = Conf(sprintf('%s/conf', scenario))
layers = Layers(sprintf('%s/layers.csv', scenario), sprintf('%s/layers', scenario))
# calculate scores
scores = CalculateAll(conf, layers, debug=T)
write.csv(scores, sprintf('%s/scores.csv', scenario), na='', row.names=F)
library(tidyr)
source('../ohiprep/src/R/common.R')
# new paths based on host machine
dirs = list(
neptune_data  = dir_neptune_data,
neptune_local = dir_neptune_local,
ohiprep       = '../ohiprep',
ohicore       = '../ohicore')
scenario <- 'fiji2013'
Fiji2013 <- read.csv("fiji2013/scores.csv") %>%
filter(region_id==18) %>%
spread(dimension, score) %>%
select(goal, score, status, future, trend, pressures, resilience) %>%
mutate(goal = factor(goal, levels=c('Index', 'NP', 'AO', 'FP', 'MAR', 'FIS', 'BD', 'SPP', 'HAB',
'CW', 'SP', 'LSP', 'ICO', 'LE', 'ECO', 'LIV', 'TR', 'CP', 'CS'))) %>%
arrange(goal)
write.csv(Fiji2013, "figures and tables/Fiji2013.csv", na="", row.names=FALSE)
require('RColorBrewer')
source("C:/Users/Melanie/Desktop/NCEAS/OHI R scripts/FlowerPlotFunction.R")
###Fiji data ----
Fiji2013 <- read.csv("fiji2013/scores.csv")
orderData <- c("Index", "NP", "AO", "FP", "MAR", "FIS", "BD", "SPP", "HAB",
"CW", "SP", "LSP", "ICO", "LE", "ECO", 'LIV', "TR", "CP", "CS")
Fiji2013 <- dcast(subset(Fiji2013, region_id==18, select=c(-region_id)), goal ~ dimension)
Fiji2013 <- Fiji2013[order(order(orderData)),]
Fiji2013 <- subset(Fiji2013, select=c("goal", "score", "status", "future", "trend", "pressures", "resilience"))
## requires loading the function below:
flowerPlots(Fiji2013, "figures and tables/FijiFlowerPlot2013OHI_Oct9_2014.png")
col.brks = c(seq(0,100,length.out=11))
# 2013 index
png(file=name,
res=300, height=8, width=8, units="in")
par(mfrow=c(1,1))
#par(pty="s")
aster(lengths=unlist(ifelse(is.na(plotData[2:15]), 100, plotData[2:15])),
widths=c(0.5, 0.5, 1, 1, 1, 1, 1, 0.5, 0.5, 0.5, 0.5, 1, 0.5, 0.5),
labels= gsub("NA", "-", paste(names(plotData)[2:15], round(plotData[2:15],0), sep="\n")),
label.offset=0.15,
label.cex=1,
fill.col= ifelse(is.na(plotData[2:15]),
"#d3d3d3",
brewer.pal(10, 'RdYlBu')[cut(as.numeric(plotData[2:15]), col.brks, labels=1:10)]),
center=round(plotData[1], 0),
#main=data[2],
max.length=100,
disk=0.35,
cex=2,
cex.main=1.5,
xlim=c(-1.2, 1.2))
dev.off()
}
flowerPlots <- function(plotData=data, name="FijiFlowerPlot.png"){
row.names(plotData) <- plotData$goal
plotData <- subset(plotData, select=c("score"))
plotData <- data.frame(t(plotData))
plotData <- subset(plotData, select=c("Index", "FIS", "MAR", "AO", "NP", "CS", "CP", "TR",
"LIV", "ECO", "ICO", "LSP", "CW", "HAB", "SPP"))
plotData <- rename(plotData, c("NP"= "Natural Products",
"AO"= "Artisanal Fishing \n Opportunities",
"MAR"="Mariculture",
"FIS"="Fisheries",
"SPP"="Species",
"HAB"="Habitats",
"CW"="Clean Waters",
"LSP"="Lasting Special \n Places",
"ICO"="Iconic \n Species",
"ECO"="Economies",
"LIV"="Livelihoods",
"TR"= "Tourism & \n Recreation",
"CP"="Coastal \n Protection",
"CS"="Carbon Storage"))
############################################################################
## Making the plots
############################################################################
col.brks = c(seq(0,100,length.out=11))
# 2013 index
png(file=name,
res=300, height=8, width=8, units="in")
par(mfrow=c(1,1))
#par(pty="s")
aster(lengths=unlist(ifelse(is.na(plotData[2:15]), 100, plotData[2:15])),
widths=c(0.5, 0.5, 1, 1, 1, 1, 1, 0.5, 0.5, 0.5, 0.5, 1, 0.5, 0.5),
labels= gsub("NA", "-", paste(names(plotData)[2:15], round(plotData[2:15],0), sep="\n")),
label.offset=0.15,
label.cex=1,
fill.col= ifelse(is.na(plotData[2:15]),
"#d3d3d3",
brewer.pal(10, 'RdYlBu')[cut(as.numeric(plotData[2:15]), col.brks, labels=1:10)]),
center=round(plotData[1], 0),
#main=data[2],
max.length=100,
disk=0.35,
cex=2,
cex.main=1.5,
xlim=c(-1.2, 1.2))
dev.off()
}
Fiji2013 <- read.csv("fiji2013/scores.csv")
orderData <- c("Index", "NP", "AO", "FP", "MAR", "FIS", "BD", "SPP", "HAB",
"CW", "SP", "LSP", "ICO", "LE", "ECO", 'LIV', "TR", "CP", "CS")
Fiji2013 <- dcast(subset(Fiji2013, region_id==18, select=c(-region_id)), goal ~ dimension)
Fiji2013 <- Fiji2013[order(order(orderData)),]
Fiji2013 <- subset(Fiji2013, select=c("goal", "score", "status", "future", "trend", "pressures", "resilience"))
## requires loading the function below:
flowerPlots(Fiji2013, "figures and tables/FijiFlowerPlot2013OHI_Oct9_2014.png")
Fiji2013 <- read.csv("fiji2013/scores.csv")
orderData <- c("Index", "NP", "AO", "FP", "MAR", "FIS", "BD", "SPP", "HAB",
"CW", "SP", "LSP", "ICO", "LE", "ECO", 'LIV', "TR", "CP", "CS")
Fiji2013 <- dcast(subset(Fiji2013, region_id==18, select=c(-region_id)), goal ~ dimension)
Fiji2013
Fiji2013 <- subset(Fiji2013, select=c("goal", "score", "status", "future", "trend", "pressures", "resilience"))
flowerPlots(Fiji2013, "figures and tables/FijiFlowerPlot2013OHI_Oct9_2014.png")
flowerPlots(Fiji2013, "figures and tables/FijiFlowerPlot2013OHI_Oct22_2014.png")
plotData <- EEZ2013
plotData <- Fiji2013
row.names(plotData) <- plotData$goal
plotData <- subset(plotData, select=c("score"))
plotData <- data.frame(t(plotData))
plotData <- subset(plotData, select=c("Index", "FIS", "MAR", "AO", "NP", "CS", "CP", "TR",
"LIV", "ECO", "ICO", "LSP", "CW", "HAB", "SPP"))
plotData <- rename(plotData, c("NP"= "Natural Products",
"AO"= "Artisanal Fishing \n Opportunities",
"MAR"="Mariculture",
"FIS"="Fisheries",
"SPP"="Species",
"HAB"="Habitats",
"CW"="Clean Waters",
"LSP"="Lasting Special \n Places",
"ICO"="Iconic \n Species",
"ECO"="Economies",
"LIV"="Livelihoods",
"TR"= "Tourism & \n Recreation",
"CP"="Coastal \n Protection",
"CS"="Carbon Storage"))
plotData
?rename
plotData <- plyr::rename(plotData, c("NP"= "Natural Products",
"AO"= "Artisanal Fishing \n Opportunities",
"MAR"="Mariculture",
"FIS"="Fisheries",
"SPP"="Species",
"HAB"="Habitats",
"CW"="Clean Waters",
"LSP"="Lasting Special \n Places",
"ICO"="Iconic \n Species",
"ECO"="Economies",
"LIV"="Livelihoods",
"TR"= "Tourism & \n Recreation",
"CP"="Coastal \n Protection",
"CS"="Carbon Storage"))
## function ----
flowerPlots <- function(plotData=data, name="FijiFlowerPlot.png"){
row.names(plotData) <- plotData$goal
plotData <- subset(plotData, select=c("score"))
plotData <- data.frame(t(plotData))
plotData <- subset(plotData, select=c("Index", "FIS", "MAR", "AO", "NP", "CS", "CP", "TR",
"LIV", "ECO", "ICO", "LSP", "CW", "HAB", "SPP"))
plotData <- plyr::rename(plotData, c("NP"= "Natural Products",
"AO"= "Artisanal Fishing \n Opportunities",
"MAR"="Mariculture",
"FIS"="Fisheries",
"SPP"="Species",
"HAB"="Habitats",
"CW"="Clean Waters",
"LSP"="Lasting Special \n Places",
"ICO"="Iconic \n Species",
"ECO"="Economies",
"LIV"="Livelihoods",
"TR"= "Tourism & \n Recreation",
"CP"="Coastal \n Protection",
"CS"="Carbon Storage"))
############################################################################
## Making the plots
############################################################################
col.brks = c(seq(0,100,length.out=11))
# 2013 index
png(file=name,
res=300, height=8, width=8, units="in")
par(mfrow=c(1,1))
#par(pty="s")
aster(lengths=unlist(ifelse(is.na(plotData[2:15]), 100, plotData[2:15])),
widths=c(0.5, 0.5, 1, 1, 1, 1, 1, 0.5, 0.5, 0.5, 0.5, 1, 0.5, 0.5),
labels= gsub("NA", "-", paste(names(plotData)[2:15], round(plotData[2:15],0), sep="\n")),
label.offset=0.15,
label.cex=1,
fill.col= ifelse(is.na(plotData[2:15]),
"#d3d3d3",
brewer.pal(10, 'RdYlBu')[cut(as.numeric(plotData[2:15]), col.brks, labels=1:10)]),
center=round(plotData[1], 0),
#main=data[2],
max.length=100,
disk=0.35,
cex=2,
cex.main=1.5,
xlim=c(-1.2, 1.2))
dev.off()
}
flowerPlots(Fiji2013, "figures and tables/FijiFlowerPlot2013OHI_Oct22_2014.png")
EEZ2013 <- read.csv("fiji2013/scores_2013EEZ.csv")
orderData <- c("Index", "NP", "AO", "FP", "MAR", "FIS", "BD", "SPP", "HAB",
"CW", "SP", "LSP", "ICO", "LE", "ECO", 'LIV', "TR", "CP", "CS")
EEZ2013 <- dcast(subset(EEZ2013, region_id==18, select=c(-region_id)), goal ~ dimension)
EEZ2013 <- EEZ2013[order(order(orderData)),]
EEZ2013 <- subset(EEZ2013, select=c("goal", "score", "status", "future", "trend", "pressures", "resilience"))
flowerPlots(EEZ2013, "figures and tables/EEZFlowerPlot2013OHI_Oc2_2014.png")
source('../ohiprep/src/R/common.R')
dirs = list(
neptune_data  = dir_neptune_data,
neptune_local = dir_neptune_local,
ohiprep       = '../ohiprep',
ohicore       = '../ohicore')
scenario <- 'fiji2013'
# load ohicore (must first download using directions from here: )
devtools::load_all('~/github/ohicore')
library(stringr)
devtools::load_all('~/Github/ohicore')
dir()
dir("..")
devtools::load_all('../ohicore')
library(stringr)
conf   = Conf(sprintf('%s/conf', scenario))
CheckLayers(layers.csv = sprintf('%s/layers.csv', scenario),
layers.dir = sprintf('%s/layers', scenario),
flds_id    = conf$config$layers_id_fields)
conf   = Conf(sprintf('%s/conf', scenario))
layers = Layers(sprintf('%s/layers.csv', scenario), sprintf('%s/layers', scenario))
scores = CalculateAll(conf, layers, debug=T)
library(tidyr)
source('../ohiprep/src/R/common.R')
# new paths based on host machine
dirs = list(
neptune_data  = dir_neptune_data,
neptune_local = dir_neptune_local,
ohiprep       = '../ohiprep',
ohicore       = '../ohicore')
OHI2013_eez <- read.csv("fiji2013/scores_2013EEZ.csv")
OHI2013_eez <- read.csv("fiji2013/scores_2013EEZ.csv") %>%
filter(goal == "Index")
head(OHI2013_eez)
summary(OHI2013_eez)
OHI2013_eez <- read.csv("fiji2013/scores_2013EEZ.csv") %>%
filter(goal == "Index") %>%
filter(region_id != 0)
summary(OHI2013_eez)
OHI2013_eez <- read.csv("fiji2013/scores_2013EEZ.csv") %>%
filter(goal == "Index") %>%
filter(!(region_id %in% c(0, 18, 213))
summary(OHI2013_eez)
summary(OHI2013_eez)
OHI2013_eez <- read.csv("fiji2013/scores_2013EEZ.csv") %>%
filter(goal == "Index") %>%
filter(!(region_id %in% c(0, 18, 213)))
summary(OHI2013_eez)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
library(colorspace)
library(ggplot2)
library(grid)
source('https://www.nceas.ucsb.edu/~frazier/myTheme.txt')
ggplot(data=subset(OHI2013_eez, dimension=="score"), aes=(x=score)) +
histogram(fill="gray") +
myTheme
ggplot(data=subset(OHI2013_eez, dimension=="score"), aes=(x=score)) +
geom_histogram(fill="gray") +
myTheme
ggplot(data=subset(OHI2013_eez, dimension==score), aes=(x=score)) +
geom_histogram(fill="gray") +
myTheme
subset(OHI2013_eez, dimension==score)
data=subset(OHI2013_eez, dimension=="score")
data
ggplot(data=subset(OHI2013_eez, dimension=="score"), aes(x=score)) +
geom_histogram(fill="gray") +
myTheme
ggplot(data=subset(OHI2013_eez, dimension=="score"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=72, color="orange", size=2) +
myTheme
ggplot(data=subset(OHI2013_eez, dimension=="score"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=72, color="orange", size=1) +
myTheme
ggplot(data=subset(OHI2013_eez, dimension=="score"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=72, color="red", size=1) +
myTheme
ggplot(data=subset(OHI2013_eez, dimension=="score"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=72, color="red", size=1) +
myTheme +
labs(x="Score")
p <- ggplot(data=subset(OHI2013_eez, dimension=="score"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=72, color="red", size=1) +
myTheme +
labs(x="Score")
p
summary(OHI2013_eez)
ggplot(data=subset(OHI2013_eez, dimension=="future"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=72, color="red", size=1) +
myTheme +
labs(x="future")
ggplot(data=subset(OHI2013_eez, dimension=="future"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=68, color="red", size=1) +
myTheme +
labs(x="future")
read.csv("fiji2013/scores_2013EEZ.csv") %>%
filter(goal == "Index") %>%
filter(!(region_id %in% c(0, 18, 213))) %>%
group_by(goal) %>%
summarize(mean=mean(score))
read.csv("fiji2013/scores_2013EEZ.csv") %>%
filter(goal == "Index") %>%
filter(!(region_id %in% c(0, 18, 213))) %>%
group_by(dimension) %>%
summarize(mean=mean(score))
ggplot(data=subset(OHI2013_eez, dimension=="score"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=72, color="red", size=1) +
myTheme +
labs(x="Score")
ggsave('figures and tables/EEZscores_score.png')
ggplot(data=subset(OHI2013_eez, dimension=="future"), aes(x=score)) +
geom_histogram(fill="gray", color="black") +
geom_vline(xintercept=68, color="red", size=1) +
myTheme +
labs(x="future")
ggsave('figures and tables/EEZscores_future.png')
read.csv("fiji2013/scores_2013EEZ.csv") %>%
filter(goal == "Index") %>%
filter(!(region_id %in% c(0, 18, 213))) %>%
group_by(dimension) %>%
summarize(mean=mean(score))
